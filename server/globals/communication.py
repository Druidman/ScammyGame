CONNECTION_MSG_TYPE = "CONNECTION"
CONNECTION_MSG = lambda val : {
    "MSG_TYPE": CONNECTION_MSG_TYPE,
    "VALUE": val
}

GAME_ASSIGNED_MSG_TYPE = "GAME_ASSIGNED"
GAME_ASSIGNED_MSG = lambda val : {
    "MSG_TYPE": GAME_ASSIGNED_MSG_TYPE,
    "VALUE": val
}

STATUS_MSG_TYPE = "STATUS"
STATUS_MSG = lambda val : {
    "MSG_TYPE": STATUS_MSG_TYPE,
    "VALUE": val
}

REQUEST_STATUS_MSG_TYPE = "REQUEST_STATUS"
REQUEST_STATUS_MSG = {
    "MSG_TYPE": REQUEST_STATUS_MSG_TYPE,
    "VALUE": True
}


DISCONNECT_MSG_TYPE = "DISCONNECT"
DISCONNECT_MSG = {
    "MSG_TYPE": DISCONNECT_MSG_TYPE,
    "VALUE": True
}


START_CHATTING_PHASE_MSG_TYPE = "START_CHATTING_PHASE"
START_CHATTING_PHASE_MSG = {
    "MSG_TYPE": START_CHATTING_PHASE_MSG_TYPE,
    "VALUE": True
}

END_CHATTING_PHASE_MSG_TYPE = "END_CHATTING_PHASE"
END_CHATTING_PHASE_MSG = {
    "MSG_TYPE": END_CHATTING_PHASE_MSG_TYPE,
    "VALUE": True
}




CHAT_MSG_TYPE = "CHAT_MSG"
CHAT_MSG = lambda val : {
    "MSG_TYPE": CHAT_MSG_TYPE,
    "VALUE": val
}

NONE_MSG_TYPE = "NONE"
NONE_MSG = {
    "MSG_TYPE": NONE_MSG_TYPE,
    "VALUE": ""
}

ADD_COINS_MSG_TYPE = "ADD_COINS_MSG_TYPE"
ADD_COINS_MSG = lambda val : {
    "MSG_TYPE": ADD_COINS_MSG_TYPE,
    "VALUE": val
}

REMOVE_COINS_MSG_TYPE = "REMOVE_COINS_MSG_TYPE"
REMOVE_COINS_MSG = lambda val : {
    "MSG_TYPE": REMOVE_COINS_MSG_TYPE,
    "VALUE": val
}

ROUND_START_MSG_TYPE = "ROUND_START_MSG_TYPE"
ROUND_START_MSG = {
    "MSG_TYPE": ROUND_START_MSG_TYPE,
    "VALUE": True
}
ROUND_END_MSG_TYPE = "ROUND_END_MSG_TYPE"
ROUND_END_MSG = {
    "MSG_TYPE": ROUND_END_MSG_TYPE,
    "VALUE": True
}


GAME_QUESTION_MSG_TYPE = "GAME_QUESTION_MSG_TYPE"
GAME_QUESTION_MSG = lambda question, operation : {
    "MSG_TYPE": GAME_QUESTION_MSG_TYPE,
    "VALUE": {
        "QUESTION": question,
        "OPERATION": "truth" if operation else "lie" # lie or truth
    }
}

GAME_QUESTION_REPLY_TYPE = "GAME_QUESTION_REPLY_TYPE"
GAME_QUESTION_REPLY = lambda val : {
    "MSG_TYPE": GAME_QUESTION_REPLY_TYPE,
    "VALUE": val
}


GAME_QUESTION_VERIFY_TYPE = "GAME_QUESTION_VERIFY_TYPE"
GAME_QUESTION_VERIFY = lambda question, answer : {
    "MSG_TYPE": GAME_QUESTION_VERIFY_TYPE,
    "VALUE": {
        "QUESTION": question,
        "ANSWER": answer
    }
}
GAME_QUESTION_VERIFY_REPLY_TYPE = "GAME_QUESTION_VERIFY_REPLY_TYPE"
GAME_QUESTION_VERIFY_REPLY = lambda val : {
    "MSG_TYPE": GAME_QUESTION_VERIFY_REPLY_TYPE,
    "VALUE": val
}

PLAYER_WON_MSG_TYPE = "PLAYER_WON_MSG_TYPE"
PLAYER_WON_MSG = {
    "MSG_TYPE": PLAYER_WON_MSG_TYPE,
    "VALUE": True
}

PLAYER_LOST_MSG_TYPE = "PLAYER_LOST_MSG_TYPE"
PLAYER_LOST_MSG = {
    "MSG_TYPE": PLAYER_LOST_MSG_TYPE,
    "VALUE": True
}

GAME_TIE_MSG_TYPE = "GAME_TIE_MSG_TYPE"
GAME_TIE_MSG = {
    "MSG_TYPE": GAME_TIE_MSG_TYPE,
    "VALUE": True
}

GAME_SUMMARY_MSG_TYPE = "GAME_SUMMARY_MSG_TYPE"
GAME_SUMMARY_MSG = lambda gameResult, creatorName, creatorGpu, coins: {
    "MSG_TYPE": GAME_SUMMARY_MSG_TYPE,
    "VALUE": {
        "GAME_RESULT": gameResult,
        "COINS": coins,
        "PRIZES": {
            "CREATOR_NAME": creatorName,
            "CREATOR_GPU": creatorGpu
        }
    }
}

STARTING_GAME_ROUNDS_MSG_TYPE = "STARTING_GAME_ROUNDS_MSG_TYPE"
STARTING_GAME_ROUNDS_MSG = {
    "MSG_TYPE": STARTING_GAME_ROUNDS_MSG_TYPE,
    "VALUE": True
}

ENDING_GAME_ROUNDS_MSG_TYPE = "ENDING_GAME_ROUNDS_MSG_TYPE"
ENDING_GAME_ROUNDS_MSG = {
    "MSG_TYPE": ENDING_GAME_ROUNDS_MSG_TYPE,
    "VALUE": True
}

GAME_ROLE_MSG_TYPE = "GAME_ROLE_MSG_TYPE"
GAME_ROLE_MSG = lambda val : {
    "MSG_TYPE": GAME_ROLE_MSG_TYPE,
    "VALUE": val
}

GAME_RESPONDER_ANSWERING_TYPE = "GAME_RESPONDER_ANSWERING_TYPE"
GAME_RESPONDER_ANSWERING = {
    "MSG_TYPE": GAME_RESPONDER_ANSWERING_TYPE,
    "VALUE": True
}

GAME_GUESSER_ANSWERING_TYPE = "GAME_GUESSER_ANSWERING_TYPE"
GAME_GUESSER_ANSWERING = {
    "MSG_TYPE": GAME_GUESSER_ANSWERING_TYPE,
    "VALUE": True
}

GAME_GUESSER = "GAME_GUESSER"
GAME_RESPONDER = "GAME_RESPONDER"


WIN = "WIN"
LOST = "LOST"
TIE = "TIE"


CREATOR_NAME = "BOBER on hackclub slack"
CREATOR_GPU = "AMD RX 570 4gb"



CURRENT_COINS_MSG_TYPE = "CURRENT_COINS_MSG_TYPE"
CURRENT_COINS_MSG = lambda x : {
    "MSG_TYPE": CURRENT_COINS_MSG_TYPE,
    "VALUE": x
}

GET_CURRENT_COINS_MSG_TYPE = "GET_CURRENT_COINS_MSG_TYPE"
GET_CURRENT_COINS_MSG = {
    "MSG_TYPE": GET_CURRENT_COINS_MSG_TYPE,
    "VALUE": True
}

PING_MSG_TYPE = "PING_MSG_TYPE"
PING_MSG = {}